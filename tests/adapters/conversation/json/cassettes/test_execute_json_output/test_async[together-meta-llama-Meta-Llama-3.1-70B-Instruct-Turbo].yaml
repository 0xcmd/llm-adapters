interactions:
- request:
    body: '{"messages": [{"role": "user", "content": "Hi, use json"}], "model": "meta-llama/Meta-Llama-3.1-70B-Instruct-Turbo",
      "response_format": {"type": "json_object"}, "stream": false}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, br
      connection:
      - keep-alive
      content-length:
      - '177'
      content-type:
      - application/json
      host:
      - api.together.xyz
      user-agent:
      - AsyncOpenAI/Python 1.54.1
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.54.1
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.10
    method: POST
    uri: https://api.together.xyz/chat/completions
  response:
    body:
      string: "{\n  \"id\": \"8df86b3acf6167b5-SJC\",\n  \"object\": \"chat.completion\",\n
        \ \"created\": 1731098853,\n  \"model\": \"meta-llama/Meta-Llama-3.1-70B-Instruct\",\n
        \ \"prompt_logprobs\": null,\n  \"prompt\": [],\n  \"choices\": [\n    {\n
        \     \"index\": 0,\n      \"message\": {\n        \"role\": \"assistant\",\n
        \       \"content\": \"JSON (JavaScript Object Notation) is a lightweight,
        easy-to-read data interchange format that is widely used for exchanging data
        between web servers, web applications, and mobile apps.\\n\\nHere is an example
        of a JSON object:\\n\\n```\\n{\\n  \\\"name\\\": \\\"John Doe\\\",\\n  \\\"age\\\":
        30,\\n  \\\"city\\\": \\\"New York\\\",\\n  \\\"interests\\\": [\\\"reading\\\",
        \\\"hiking\\\", \\\"coding\\\"],\\n  \\\"contact\\\": {\\n    \\\"email\\\":
        \\\"johndoe@example.com\\\",\\n    \\\"phone\\\": \\\"123-456-7890\\\"\\n
        \ }\\n}\\n```\\n\\nThis JSON object represents a person with the following
        properties:\\n\\n*   `name`: a string value\\n*   `age`: a number value\\n*
        \  `city`: a string value\\n*   `interests`: an array of string values\\n*
        \  `contact`: an object with `email` and `phone` properties\\n\\nYou can parse
        and generate JSON data in most programming languages, including JavaScript,
        Python, Java, and C#.\\n\\nHere is an example of how to parse JSON data in
        JavaScript:\\n\\n```\\nconst jsonData = '{\\\"name\\\": \\\"John Doe\\\",
        \\\"age\\\": 30}';\\nconst data = JSON.parse(jsonData);\\nconsole.log(data.name);
        // Output: John Doe\\nconsole.log(data.age);  // Output: 30\\n```\\n\\nAnd
        here is an example of how to generate JSON data in JavaScript:\\n\\n```\\nconst
        data = { name: \\\"John Doe\\\", age: 30 };\\nconst jsonData = JSON.stringify(data);\\nconsole.log(jsonData);
        // Output: {\\\"name\\\": \\\"John Doe\\\", \\\"age\\\": 30}\\n```\\n\\nJSON
        is a versatile data format that can be used for a wide range of applications,
        from simple data exchange to complex data processing and storage.\\n\\nSome
        common use cases for JSON include:\\n\\n*   **Data exchange**: JSON is widely
        used for exchanging data between web servers, web applications, and mobile
        apps.\\n*   **Data storage**: JSON can be used to store data in files, databases,
        or other data storage systems.\\n*   **Configuration files**: JSON can be
        used to store configuration settings for applications and systems.\\n*   **API
        data**: JSON is often used to represent data returned by APIs (Application
        Programming Interfaces).\\n\\nHere are some benefits of using JSON:\\n\\n*
        \  **Easy to read and write**: JSON is a human-readable format that is easy
        to write and parse.\\n*   **Lightweight**: JSON is a lightweight format that
        requires minimal overhead.\\n*   **Flexible**: JSON can represent a wide range
        of data structures, including objects, arrays, and strings.\\n*   **Language-independent**:
        JSON can be used with any programming language.\\n\\nHowever, JSON also has
        some limitations:\\n\\n*   **Limited data types**: JSON only supports a limited
        set of data types, including strings, numbers, booleans, arrays, and objects.\\n*
        \  **No support for comments**: JSON does not support comments, which can
        make it difficult to add notes or explanations to JSON data.\\n*   **No support
        for data schema**: JSON does not have a built-in data schema, which can make
        it difficult to validate JSON data.\\n\\nOverall, JSON is a widely-used and
        versatile data format that is well-suited for a wide range of applications.\",\n
        \       \"tool_calls\": []\n      },\n      \"logprobs\": null,\n      \"finish_reason\":
        \"stop\"\n    }\n  ],\n  \"usage\": {\n    \"prompt_tokens\": 39,\n    \"total_tokens\":
        701,\n    \"completion_tokens\": 662\n  }\n}"
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8df86b3acf6167b5-SJC
      Connection:
      - keep-alive
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Fri, 08 Nov 2024 20:47:48 GMT
      Server:
      - cloudflare
      Strict-Transport-Security:
      - max-age=2592000; includeSubDomains
      Transfer-Encoding:
      - chunked
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400
      content-length:
      - '3452'
      etag:
      - W/"d7c-u30EIvxVKf67VlppaCpnGLWb9D8"
      x-api-call-end:
      - '2024-11-08T20:47:48.819Z'
      x-api-call-start:
      - '2024-11-08T20:47:33.595Z'
      x-api-received:
      - '2024-11-08T20:47:33.589Z'
      x-inference-version:
      - v2
      x-ratelimit:
      - 'false'
      x-ratelimit-limit:
      - '100'
      x-ratelimit-limit-tokens:
      - '100000'
      x-ratelimit-remaining:
      - '197'
      x-ratelimit-remaining-tokens:
      - '99789'
      x-ratelimit-reset:
      - '1'
    status:
      code: 200
      message: OK
version: 1
