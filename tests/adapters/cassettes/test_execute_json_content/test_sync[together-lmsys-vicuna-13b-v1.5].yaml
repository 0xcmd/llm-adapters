interactions:
- request:
    body: '{"messages": [{"role": "user", "content": [{"type": "text", "text": "Hi"},
      {"type": "text", "text": "Hi"}]}], "model": "lmsys/vicuna-13b-v1.5"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '143'
      content-type:
      - application/json
      host:
      - api.together.xyz
      user-agent:
      - OpenAI/Python 1.36.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.36.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.6
    method: POST
    uri: https://api.together.xyz/chat/completions
  response:
    body:
      string: '{"id":"8af935906e5195a3-TBS","object":"chat.completion","created":1723054082,"model":"lmsys/vicuna-13b-v1.5","prompt":[],"choices":[{"finish_reason":"eos","seed":686154059062592100,"logprobs":null,"index":0,"message":{"role":"assistant","content":"
        This is an array of two objects. The first object is an object with two properties:
        \"name\" and \"age\". The second object is an object with three properties:
        \"city\", \"country\", and \"job\".\n\nHere is an example of how you could
        access the properties of these objects using JavaScript:\n```javascript\nconst
        myArray = [[{name: \"John\", age: 30}, {city: \"New York\", country: \"USA\",
        job: \"Lawyer\"}]];\n\n// Access the \"name\" property of the first object
        in the array\nconsole.log(myArray[0].name); // Output: \"John\"\n\n// Access
        the \"city\" property of the second object in the array\nconsole.log(myArray[1].city);
        // Output: \"New York\"\n```\nNote that to access the properties of an object,
        you need to use the dot notation or square bracket notation. In the example
        above, we used the dot notation to access the \"name\" property of the first
        object, and the square bracket notation to access the \"city\" property of
        the second object."}}],"usage":{"prompt_tokens":16,"completion_tokens":241,"total_tokens":257}}'
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8af935906e5195a3-TBS
      Connection:
      - keep-alive
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Wed, 07 Aug 2024 18:08:02 GMT
      Server:
      - cloudflare
      Strict-Transport-Security:
      - max-age=2592000; includeSubDomains
      Transfer-Encoding:
      - chunked
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400
      content-length:
      - '1282'
      etag:
      - '"ka9owfgtrkzm"'
      vary:
      - Accept-Encoding
      x-api-call-end:
      - '2024-08-07T18:08:02.697Z'
      x-api-call-start:
      - '2024-08-07T18:07:57.632Z'
      x-api-received:
      - '2024-08-07T18:07:57.625Z'
      x-compute-characters:
      - '48'
      x-compute-time:
      - '4958'
      x-hostname:
      - lmsys-vicuna-13b-v1-5-56f66b65cb-tpds6
      x-inference-time:
      - '4941'
      x-inference-version:
      - v2
      x-queue-time:
      - '17'
      x-ratelimit-limit:
      - '150'
      x-ratelimit-remaining:
      - '148'
      x-ratelimit-reset:
      - '1'
      x-time-per-token:
      - '20'
      x-total-time:
      - '4958'
      x-validation-time:
      - '0'
    status:
      code: 200
      message: OK
version: 1
