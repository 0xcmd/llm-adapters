interactions:
- request:
    body: '{"messages": [{"role": "user", "content": [{"type": "text", "text": "Hi"},
      {"type": "text", "text": "Hi"}]}], "model": "mistralai/Mixtral-8x7B-Instruct-v0.1"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '158'
      content-type:
      - application/json
      host:
      - api.together.xyz
      user-agent:
      - AsyncOpenAI/Python 1.30.4
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.30.4
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.6
    method: POST
    uri: https://api.together.xyz/chat/completions
  response:
    body:
      string: '{"id":"88b8b589ae587aa9-SJC","object":"chat.completion","created":1717009037,"model":"mistralai/Mixtral-8x7B-Instruct-v0.1","prompt":[],"choices":[{"finish_reason":"eos","logprobs":null,"index":0,"message":{"role":"assistant","content":"
        It seems like you''re trying to display two object literals, but the output
        format is not clear. Here''s how you can display the contents of two object
        literals in a readable format:\n\nObject literal 1:\n```javascript\n{\n  key1:
        ''value1'',\n  key2: ''value2'',\n  key3: ''value3''\n}\n```\nObject literal
        2:\n```javascript\n{\n  key4: ''value4'',\n  key5: ''value5'',\n  key6: ''value6''\n}\n```\nReplace
        `key1`, `value1`, `key2`, `value2`, ..., `key6`, `value6` with the actual
        keys and values of your object literals.\n\nIf you need to display the object
        literals as strings, you can use `JSON.stringify()`:\n\n```javascript\nconst
        obj1 = {\n  key1: ''value1'',\n  key2: ''value2'',\n  key3: ''value3''\n};\n\nconst
        obj2 = {\n  key4: ''value4'',\n  key5: ''value5'',\n  key6: ''value6''\n};\n\nconsole.log(JSON.stringify(obj1,
        null, 2));\nconsole.log(JSON.stringify(obj2, null, 2));\n```\nThis will output:\n\n```json\n{\n  \"key1\":
        \"value1\",\n  \"key2\": \"value2\",\n  \"key3\": \"value3\"\n}\n{\n  \"key4\":
        \"value4\",\n  \"key5\": \"value5\",\n  \"key6\": \"value6\"\n}\n```"}}],"usage":{"prompt_tokens":17,"completion_tokens":391,"total_tokens":408}}'
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 88b8b589ae587aa9-SJC
      Connection:
      - keep-alive
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Wed, 29 May 2024 18:57:17 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400
      content-length:
      - '1376'
      etag:
      - '"80g77dekgu128"'
      vary:
      - Accept-Encoding
      x-api-call-end:
      - '2024-05-29T18:57:17.846Z'
      x-api-call-start:
      - '2024-05-29T18:57:15.810Z'
      x-api-received:
      - '2024-05-29T18:57:15.805Z'
      x-compute-characters:
      - '49'
      x-compute-time:
      - '1911'
      x-hostname:
      - mistralai-mixtral-8x7b-instruct-v0-1-5649f775ff-wf8gf
      x-inference-time:
      - '1910'
      x-inference-version:
      - v2
      x-queue-time:
      - '0'
      x-ratelimit-limit:
      - '200'
      x-ratelimit-remaining:
      - '199'
      x-ratelimit-reset:
      - '2'
      x-time-per-token:
      - '4'
      x-total-time:
      - '1911'
      x-validation-time:
      - '0'
    status:
      code: 200
      message: OK
version: 1
