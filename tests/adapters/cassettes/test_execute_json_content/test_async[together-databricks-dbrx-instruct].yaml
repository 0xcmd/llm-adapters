interactions:
- request:
    body: '{"messages": [{"role": "user", "content": [{"type": "text", "text": "Hi"},
      {"type": "text", "text": "Hi"}]}], "model": "databricks/dbrx-instruct"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '146'
      content-type:
      - application/json
      host:
      - api.together.xyz
      user-agent:
      - AsyncOpenAI/Python 1.30.4
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.30.4
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.6
    method: POST
    uri: https://api.together.xyz/chat/completions
  response:
    body:
      string: '{"id":"88b8b4648f817aa9-SJC","object":"chat.completion","created":1717008992,"model":"databricks/dbrx-instruct","prompt":[],"choices":[{"finish_reason":"stop","logprobs":null,"index":0,"message":{"role":"assistant","content":"It
        looks like you have provided two JavaScript objects, but without any context
        or further information, it is difficult to provide a helpful response. Could
        you please provide more details or clarify what you would like to know about
        these objects?\n\nIn general, an object in JavaScript is a collection of properties,
        where each property is an association between a key and a value. The key is
        a string or symbol, and the value can be any data type, including functions.
        Objects are mutable, meaning that their properties can be added, changed,
        or removed at runtime.\n\nHere''s an example of a simple JavaScript object:\n```javascript\nconst
        person = {\n  name: ''John Doe'',\n  age: 30,\n  isMarried: true,\n  hobbies:
        [''reading'', ''hiking'', ''coding''],\n  greet: function() {\n    console.log(`Hello,
        I''m ${this.name}!`);\n  }\n};\n```\nIn this example, `person` is an object
        with five properties: `name`, `age`, `isMarried`, `hobbies`, and `greet`.
        The `name`, `age`, and `isMarried` properties are simple key-value pairs,
        while the `hobbies` property is an array of strings. The `greet` property
        is a function that logs a greeting message to the console.\n\nIf you could
        provide more context or details about the objects you have provided, I would
        be happy to help you further!"}}],"usage":{"prompt_tokens":15,"completion_tokens":295,"total_tokens":310}}'
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 88b8b4648f817aa9-SJC
      Connection:
      - keep-alive
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Wed, 29 May 2024 18:56:32 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400
      content-length:
      - '1581'
      etag:
      - '"wj8a7qzvw817x"'
      vary:
      - Accept-Encoding
      x-api-call-end:
      - '2024-05-29T18:56:32.791Z'
      x-api-call-start:
      - '2024-05-29T18:56:28.921Z'
      x-api-received:
      - '2024-05-29T18:56:28.914Z'
      x-compute-characters:
      - '81'
      x-compute-time:
      - '3614'
      x-hostname:
      - databricks-dbrx-instruct-dd86d5ff6-6wj9m
      x-inference-time:
      - '3614'
      x-inference-version:
      - v2
      x-queue-time:
      - '0'
      x-ratelimit-limit:
      - '200'
      x-ratelimit-remaining:
      - '199'
      x-ratelimit-reset:
      - '2'
      x-time-per-token:
      - '12'
      x-total-time:
      - '3614'
      x-validation-time:
      - '0'
    status:
      code: 200
      message: OK
version: 1
