interactions:
- request:
    body: '{"messages": [{"role": "user", "content": [{"type": "text", "text": "Hi"},
      {"type": "text", "text": "Hi"}]}], "model": "teknium/OpenHermes-2p5-Mistral-7B"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '155'
      content-type:
      - application/json
      host:
      - api.together.xyz
      user-agent:
      - OpenAI/Python 1.30.4
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.30.4
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.6
    method: POST
    uri: https://api.together.xyz/chat/completions
  response:
    body:
      string: '{"id":"88b8afbad9712578-SJC","object":"chat.completion","created":1717008801,"model":"teknium/OpenHermes-2p5-Mistral-7B","prompt":[],"choices":[{"finish_reason":"eos","logprobs":null,"index":0,"message":{"role":"assistant","content":"It
        seems like you''re trying to display an array of objects in your console.
        The output you provided shows two objects, each represented by the string
        \"[object Object]\". This is a default string representation of an object
        in JavaScript.\n\nIf you want to see the actual properties and values of these
        objects, you can use a loop to iterate through the array and log each object
        individually. Here''s an example using a for loop:\n\n```javascript\nfor (let
        i = 0; i < yourArray.length; i++) {\n  console.log(yourArray[i]);\n}\n```\n\nReplace
        `yourArray` with the name of your actual array. This will print each object
        in the array to the console, showing their properties and values.\n\nAlternatively,
        if you want to display the properties and values of each object in a more
        structured way, you can use a loop combined with `Object.keys()` and `Object.values()`
        methods:\n\n```javascript\nfor (let i = 0; i < yourArray.length; i++) {\n  const
        objectKeys = Object.keys(yourArray[i]);\n  const objectValues = Object.values(yourArray[i]);\n  \n  console.log(`Object
        ${i + 1}:`);\n  for (let j = 0; j < objectKeys.length; j++) {\n    console.log(`${objectKeys[j]}:
        ${objectValues[j]}`);\n  }\n}\n```\n\nThis will print each object''s properties
        and values in a more readable format."}}],"usage":{"prompt_tokens":18,"completion_tokens":347,"total_tokens":365}}'
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 88b8afbad9712578-SJC
      Connection:
      - keep-alive
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Wed, 29 May 2024 18:53:21 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400
      content-length:
      - '1589'
      etag:
      - '"9r7cdrcvs6185"'
      vary:
      - Accept-Encoding
      x-api-call-end:
      - '2024-05-29T18:53:21.981Z'
      x-api-call-start:
      - '2024-05-29T18:53:18.021Z'
      x-api-received:
      - '2024-05-29T18:53:18.017Z'
      x-compute-characters:
      - '81'
      x-compute-time:
      - '3841'
      x-hostname:
      - teknium-openhermes-2p5-mistral-7b-94f596899-gr6p2
      x-inference-time:
      - '3825'
      x-inference-version:
      - v2
      x-queue-time:
      - '15'
      x-ratelimit-limit:
      - '200'
      x-ratelimit-remaining:
      - '199'
      x-ratelimit-reset:
      - '2'
      x-time-per-token:
      - '11'
      x-total-time:
      - '3841'
      x-validation-time:
      - '0'
    status:
      code: 200
      message: OK
version: 1
