interactions:
- request:
    body: '{"messages": [{"role": "user", "content": [{"type": "text", "text": "Hi"},
      {"type": "text", "text": "Hi"}]}], "model": "meta-llama/Llama-2-70b-chat-hf"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '152'
      content-type:
      - application/json
      host:
      - api.together.xyz
      user-agent:
      - AsyncOpenAI/Python 1.30.4
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.30.4
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.6
    method: POST
    uri: https://api.together.xyz/chat/completions
  response:
    body:
      string: '{"id":"88b8b5550d797aa9-SJC","object":"chat.completion","created":1717009033,"model":"meta-llama/Llama-2-70b-chat-hf","prompt":[],"choices":[{"finish_reason":"eos","logprobs":null,"index":0,"message":{"role":"assistant","content":"  It
        looks like you have an array of objects. Each object within the array has
        a key-value pair. The keys are not explicitly defined, but they appear to
        be strings. The values are also objects.\n\nHere''s an example of how you
        can access the values within the array:\n```\nlet myArray = [\n  { key1: ''value1''
        },\n  { key2: ''value2'' },\n  { key3: ''value3'' }\n];\n\nconsole.log(myArray[0].key1);
        // Output: ''value1''\nconsole.log(myArray[1].key2); // Output: ''value2''\nconsole.log(myArray[2].key3);
        // Output: ''value3''\n```\nYou can also use loops to iterate through the
        array and access the values. Here''s an example using `forEach()`:\n```\nmyArray.forEach(obj
        => {\n  console.log(obj.key1);\n  console.log(obj.key2);\n  console.log(obj.key3);\n});\n```\nThis
        will output the values for each object in the array:\n```\nvalue1\nvalue2\nvalue3\n```\nKeep
        in mind that the above examples assume that the keys within each object are
        consistent. If the keys are dynamic, you may need to use a different approach
        to access them."}}],"usage":{"prompt_tokens":16,"completion_tokens":305,"total_tokens":321}}'
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 88b8b5550d797aa9-SJC
      Connection:
      - keep-alive
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Wed, 29 May 2024 18:57:13 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400
      content-length:
      - '1328'
      etag:
      - '"h4277otk4x10w"'
      vary:
      - Accept-Encoding
      x-api-call-end:
      - '2024-05-29T18:57:13.519Z'
      x-api-call-start:
      - '2024-05-29T18:57:07.404Z'
      x-api-received:
      - '2024-05-29T18:57:07.399Z'
      x-compute-characters:
      - '49'
      x-compute-time:
      - '6000'
      x-hostname:
      - meta-llama-llama-2-70b-chat-hf-fc5dc8678-htrpb
      x-inference-time:
      - '5932'
      x-inference-version:
      - v2
      x-queue-time:
      - '68'
      x-ratelimit-limit:
      - '200'
      x-ratelimit-remaining:
      - '199'
      x-ratelimit-reset:
      - '2'
      x-time-per-token:
      - '19'
      x-total-time:
      - '6000'
      x-validation-time:
      - '0'
    status:
      code: 200
      message: OK
version: 1
