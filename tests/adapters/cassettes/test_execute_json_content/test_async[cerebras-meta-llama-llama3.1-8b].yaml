interactions:
- request:
    body: '{"messages": [{"role": "user", "content": [{"type": "text", "text": "Hi"},
      {"type": "text", "text": "Hi"}]}], "model": "llama3.1-8b", "stream": false}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, br
      connection:
      - keep-alive
      content-length:
      - '150'
      content-type:
      - application/json
      host:
      - api.cerebras.ai
      user-agent:
      - AsyncOpenAI/Python 1.53.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.53.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.10
    method: POST
    uri: https://api.cerebras.ai/v1/chat/completions
  response:
    body:
      string: '{"id":"chatcmpl-c419f384-61c4-4f12-9a30-0872b2f31217","choices":[{"finish_reason":"stop","index":0,"message":{"content":"This
        is an example of a JSON (JavaScript Object Notation) array containing two
        elements. Each element is an object with two properties: ''type'' and ''text''.
        \n\nHere''s a breakdown of the structure:\n\n- `type`: The type of the element,
        which in this case is always `''text''`.\n- `text`: The actual text content
        of the element.\n\nThe given array looks like this:\n\n1. `type: ''text'',
        text: ''Hi''` \n2. `type: ''text'', text: ''Hi''`\n\nYou can use this data
        structure in various programming languages, including Python, to store and
        manipulate text data. \n\nHere''s how you might access this data in Python:\n\n```python\nimport
        json\n\ndata = [{''type'': ''text'', ''text'': ''Hi''}, {''type'': ''text'',
        ''text'': ''Hi''}]\n# Accessing the first element''s text\nprint(data[0][''text''])
        \n# Output: Hi\n\n# Accessing the second element''s text\nprint(data[1][''text''])
        \n# Output: Hi\n```\n\nIn this example, `data[0]` returns the first element
        in the array, which is the object with the text `''Hi''`. The `data[0][''text'']`
        expression then returns the value of the ''text'' property within that object,
        which is the text `''Hi''`.","role":"assistant"}}],"created":1730332134,"model":"llama3.1-8b","system_fingerprint":"fp_55ebaf7e1e","object":"chat.completion","usage":{"prompt_tokens":61,"completion_tokens":285,"total_tokens":346},"time_info":{"queue_time":2.088e-05,"prompt_time":0.0034842418380281685,"completion_time":0.12907312616197184,"total_time":0.1469888687133789,"created":1730332134}}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Wed, 30 Oct 2024 23:48:54 GMT
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 1f2a2b4522308aae8508a9096d87b334.cloudfront.net (CloudFront)
      X-Amz-Cf-Id:
      - itg9AQKl8YrytE19RMegFgnP1GPY2j-Qd_rIwXs4DXfkiVBWpvgdUw==
      X-Amz-Cf-Pop:
      - SFO20-C1
      X-Cache:
      - Miss from cloudfront
      content-length:
      - '1587'
      referrer-policy:
      - strict-origin-when-cross-origin
      server:
      - uvicorn
      strict-transport-security:
      - max-age=3600; includeSubDomains
      vary:
      - accept-encoding
      x-content-type-options:
      - nosniff
      x-ratelimit-limit-requests-day:
      - '14400'
      x-ratelimit-limit-tokens-minute:
      - '60000'
      x-ratelimit-remaining-requests-day:
      - '14374'
      x-ratelimit-remaining-tokens-minute:
      - '59822'
      x-ratelimit-reset-requests-day:
      - '665.0352327823639'
      x-ratelimit-reset-tokens-minute:
      - '5.035232782363892'
      x-request-id:
      - itg9AQKl8YrytE19RMegFgnP1GPY2j-Qd_rIwXs4DXfkiVBWpvgdUw==
    status:
      code: 200
      message: OK
version: 1
