interactions:
- request:
    body: '{"messages": [{"role": "user", "content": ""}, {"role": "assistant", "content":
      " "}, {"role": "user", "content": "\n"}], "model": "databricks/dbrx-instruct"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '158'
      content-type:
      - application/json
      host:
      - openrouter.ai
      user-agent:
      - OpenAI/Python 1.46.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.46.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.6
    method: POST
    uri: https://openrouter.ai/api/v1/chat/completions
  response:
    body:
      string: "\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n{\"id\":\"gen-cJm2QA13xafA2LPCN3b7ncy7m1EB\",\"model\":\"databricks/dbrx-instruct\",\"object\":\"chat.completion\",\"created\":1726693642,\"choices\":[{\"logprobs\":null,\"finish_reason\":\"stop\",\"index\":0,\"message\":{\"role\":\"assistant\",\"content\":\"You
        can use Markdown to style your text in a code block. For example, you can
        use triple backticks (```) to create a code block, and then specify the language
        for syntax highlighting.\\n\\nHere's an example:\\n\\n```python\\ndef hello_world():\\n
        \   print(\\\"Hello, world!\\\")\\n\\nhello_world()\\n```\\n\\nThis will display
        the Python code for a function that prints \\\"Hello, world!\\\" with syntax
        highlighting.\\n\\nYou can also use Markdown to format text, such as making
        it bold or italic. For example, you can use asterisks (`*`) or underscores
        (`_`) to make text bold, or use single asterisks or underscores to make text
        italic.\\n\\nHere are some examples:\\n\\n* **This text is bold**\\n* _This
        text is italic_\\n* **_This text is bold and italic_**\\n\\nYou can also create
        lists, headings, and more using Markdown.\",\"refusal\":\"\"}}],\"usage\":{\"prompt_tokens\":230,\"completion_tokens\":178,\"total_tokens\":408}}"
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c544e202b2f7a4e-DUS
      Cache-Control:
      - public, max-age=0, must-revalidate
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Wed, 18 Sep 2024 21:07:22 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      access-control-allow-credentials:
      - 'true'
      access-control-allow-headers:
      - Authorization, User-Agent, X-Api-Key, X-CSRF-Token, X-Requested-With, Accept,
        Accept-Version, Content-Length, Content-MD5, Content-Type, Date, X-Api-Version,
        HTTP-Referer, X-Windowai-Title, X-Openrouter-Title, X-Title, X-Stainless-Lang,
        X-Stainless-Package-Version, X-Stainless-OS, X-Stainless-Arch, X-Stainless-Runtime,
        X-Stainless-Runtime-Version
      access-control-allow-methods:
      - GET,OPTIONS,PATCH,DELETE,POST,PUT
      access-control-allow-origin:
      - '*'
      content-length:
      - '3086'
      content-security-policy:
      - 'default-src ''self''; script-src ''self'' ''unsafe-eval'' ''unsafe-inline''
        https://clerk.openrouter.ai https://cunning-heron-18.clerk.accounts.dev https://challenges.cloudflare.com
        https://checkout.stripe.com https://connect-js.stripe.com https://js.stripe.com
        https://maps.googleapis.com https://www.googletagmanager.com https://*.ingest.sentry.io;
        connect-src ''self'' https://clerk.openrouter.ai https://cunning-heron-18.clerk.accounts.dev
        https://checkout.stripe.com https://api.stripe.com https://maps.googleapis.com
        *.google-analytics.com https://www.googletagmanager.com https://raw.githubusercontent.com
        https://*.ingest.sentry.io; frame-src ''self'' https://challenges.cloudflare.com
        https://checkout.stripe.com https://connect-js.stripe.com https://js.stripe.com
        https://hooks.stripe.com https://us5.datadoghq.com https://*.ingest.sentry.io;
        img-src ''self'' data: blob: https://img.clerk.com https://*.stripe.com https://www.googletagmanager.com
        https://t0.gstatic.com; worker-src ''self'' blob:; style-src ''self'' ''unsafe-inline''
        sha256-0hAheEzaMe6uXIKV4EehS9pu1am1lj/KnnzrOYqckXk=; upgrade-insecure-requests'
      strict-transport-security:
      - max-age=63072000
      x-matched-path:
      - /api/v1/chat/completions
      x-vercel-id:
      - fra1::rnrkc-1726693642491-0e189c2de43b
    status:
      code: 200
      message: OK
version: 1
