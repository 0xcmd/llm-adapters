interactions:
- request:
    body: '{"messages": [{"role": "user", "content": ""}, {"role": "assistant", "content":
      " "}, {"role": "user", "content": "\n"}], "model": "mistralai/mixtral-8x22b-instruct"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '166'
      content-type:
      - application/json
      host:
      - openrouter.ai
      user-agent:
      - AsyncOpenAI/Python 1.46.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.46.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.6
    method: POST
    uri: https://openrouter.ai/api/v1/chat/completions
  response:
    body:
      string: "\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n{\"id\":\"gen-1728427505-lQW9gPMbxRpBcty0lBV2\",\"provider\":\"Together\",\"model\":\"mistralai/mixtral-8x22b-instruct\",\"object\":\"chat.completion\",\"created\":1728427505,\"choices\":[{\"logprobs\":null,\"finish_reason\":\"eos\",\"index\":0,\"message\":{\"role\":\"assistant\",\"content\":\"
        Assembly code :\\n\\n```assembly\\nsection .data\\n    msg db \\\"Hello, World!\\\",0
        ; define a string\\n\\nsection .text\\n    global _start\\n\\n_start:\\n    ;
        sys_write syscall\\n    mov eax, 4  ; number of bytes to write\\n    mov ebx,
        1  ; file descriptor (stdout)\\n    mov ecx, msg ; message to write\\n    mov
        ecx, 0 ; message length\\n    int 0x80 ; call kernel\\n\\n    ; sys_exit syscall\\n
        \   mov eax, 1  ; return 0\\n    mov ebx, 0  ; exit status\\n    int 0x80
        ; call kernel\\n```\\n\\nThis code is written in x86 assembly, and it's a
        simple program that prints the string \\\"Hello, World!\\\" to the standard
        output. Here's a breakdown of the code:\\n\\n- `section .data` : This section
        is used to define any initialized data that the program needs. In this case,
        we're defining a string called `msg` with the value \\\"Hello, World!\\\".\\n-
        `section .text` : This section is used to define the main code of the program.\\n-
        `global _start` : This line defines a global symbol called `_start`, which
        is the entry point for the program.\\n- `_start:` : This line defines the
        beginning of the `_start` section, which is the entry point for the program.\\n-
        `mov eax, 4` : This line moves the value 4 into the `eax` register, which
        is used as a parameter for the `sys_write` syscall. The value 4 represents
        the number of bytes to write.\\n- `mov ebx, 1` : This line moves the value
        1 into the `ebx` register, which is used as a parameter for the `sys_write`
        syscall. The value 1 represents the file descriptor for the standard output.\\n-
        `mov ecx, msg` : This line moves the address of the `msg` string into the
        `ecx` register, which is used as a parameter for the `sys_write` syscall.\\n-
        `mov ecx, 0` : This line moves the value 0 into the `ecx` register, which
        is used as a parameter for the `sys_write` syscall. The value 0 represents
        the message length.\\n- `int 0x80` : This line invokes the `sys_write` syscall,
        which writes the string to the standard output.\\n- `mov eax, 1` : This line
        moves the value 1 into the `eax` register, which is used as a parameter for
        the `sys_exit` syscall. The value 1 represents the exit status.\\n- `mov ebx,
        0` : This line moves the value 0 into the `ebx` register, which is used as
        a parameter for the `sys_exit` syscall. The value 0 represents the exit status.\\n-
        `int 0x80` : This line invokes the `sys_exit` syscall, which terminates the
        program.\\n\\nTo assemble, link, and run this program, you can use a command
        like `nasm -o hello.o hello.asm && ld hello.o -o hello && ./hello`.\",\"refusal\":\"\"}}],\"usage\":{\"prompt_tokens\":7,\"completion_tokens\":755,\"total_tokens\":762}}"
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8cf9a8c5cc8c95a0-TBS
      Cache-Control:
      - public, max-age=0, must-revalidate
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 08 Oct 2024 22:45:05 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      access-control-allow-credentials:
      - 'true'
      access-control-allow-headers:
      - Authorization, User-Agent, X-Api-Key, X-CSRF-Token, X-Requested-With, Accept,
        Accept-Version, Content-Length, Content-MD5, Content-Type, Date, X-Api-Version,
        HTTP-Referer, X-Windowai-Title, X-Openrouter-Title, X-Title, X-Stainless-Lang,
        X-Stainless-Package-Version, X-Stainless-OS, X-Stainless-Arch, X-Stainless-Runtime,
        X-Stainless-Runtime-Version, X-Stainless-Retry-Count
      access-control-allow-methods:
      - GET,OPTIONS,PATCH,DELETE,POST,PUT
      access-control-allow-origin:
      - '*'
      content-length:
      - '11160'
      content-security-policy:
      - 'default-src ''self''; script-src ''self'' ''unsafe-eval'' ''unsafe-inline''
        https://clerk.openrouter.ai https://cunning-heron-18.clerk.accounts.dev https://challenges.cloudflare.com
        https://checkout.stripe.com https://connect-js.stripe.com https://js.stripe.com
        https://maps.googleapis.com https://www.googletagmanager.com https://*.ingest.sentry.io;
        connect-src ''self'' https://clerk.openrouter.ai https://cunning-heron-18.clerk.accounts.dev
        https://checkout.stripe.com https://api.stripe.com https://maps.googleapis.com
        *.google-analytics.com https://www.googletagmanager.com https://raw.githubusercontent.com
        https://*.ingest.sentry.io; frame-src ''self'' https://challenges.cloudflare.com
        https://checkout.stripe.com https://connect-js.stripe.com https://js.stripe.com
        https://hooks.stripe.com https://us5.datadoghq.com https://*.ingest.sentry.io;
        img-src ''self'' data: blob: https://img.clerk.com https://*.stripe.com https://www.googletagmanager.com
        https://t0.gstatic.com; worker-src ''self'' blob:; style-src ''self'' ''unsafe-inline''
        sha256-0hAheEzaMe6uXIKV4EehS9pu1am1lj/KnnzrOYqckXk=; upgrade-insecure-requests'
      strict-transport-security:
      - max-age=63072000
      x-matched-path:
      - /api/v1/chat/completions
      x-vercel-id:
      - fra1::prwnq-1728427505601-66c9a653e718
    status:
      code: 200
      message: OK
version: 1
