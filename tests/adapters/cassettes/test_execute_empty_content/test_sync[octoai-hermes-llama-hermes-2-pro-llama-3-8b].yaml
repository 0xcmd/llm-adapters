interactions:
- request:
    body: '{"messages": [{"role": "user", "content": ""}, {"role": "assistant", "content":
      " "}, {"role": "user", "content": "\n"}], "model": "hermes-2-pro-llama-3-8b",
      "stream": false}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '174'
      content-type:
      - application/json
      host:
      - text.octoai.run
      user-agent:
      - OpenAI/Python 1.50.1
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.50.1
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.10
    method: POST
    uri: https://text.octoai.run/v1/chat/completions
  response:
    body:
      string: '{"id":"chatcmpl-48fd2d630ad04ce58f0c3d5862e062bc","object":"chat.completion","created":1728955368,"model":"hermes-2-pro-llama-3-8b","choices":[{"index":0,"message":{"role":"assistant","content":"Here''s
        a Python script that can help you backup or restore specific files or directories
        in your system:\n\n```python\nimport os\nimport shutil\n\ndef backup(source,
        destination):\n    for subdir, dirs, files in os.walk(source):\n        for
        file in files:\n            source_file = os.path.join(subdir, file)\n            destination_file
        = os.path.join(destination, os.path.relpath(source_file, source))\n            if
        not os.path.exists(os.path.dirname(destination_file)):\n                os.makedirs(os.path.dirname(destination_file))\n            shutil.copy2(source_file,
        destination_file)\n\ndef restore(source, destination):\n    for subdir, dirs,
        files in os.walk(source):\n        for file in files:\n            source_file
        = os.path.join(subdir, file)\n            destination_file = os.path.join(destination,
        os.path.relpath(source_file, source))\n            if os.path.exists(destination_file):\n                shutil.copy2(source_file,
        destination_file)\n            else:\n                print(f\"Warning: {file}
        does not exist in source directory.\")\n\nsource_directory = \"/path/to/source/directory\"\ndestination_directory
        = \"/path/to/destination/directory\"\n\n# To perform a backup\nbackup(source_directory,
        destination_directory)\n\n# To perform a restore\nrestore(source_directory,
        destination_directory)\n```\n\nThis script uses the `os` module for file operations
        and the `shutil` module for copying and creating directories. The `backup`
        function traverses the source directory and copies each file to the destination
        directory by creating the appropriate subdirectories if they don''t exist.
        The `restore` function attempts to copy each file from the source directory
        to the destination directory, creating subdirectories if needed. If a file
        already exists in the destination directory, it will not be overwritten.\n\nMake
        sure to replace `/path/to/source/directory` and `/path/to/destination/directory`
        with the appropriate paths for your situation."},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":19,"completion_tokens":377,"total_tokens":396}}'
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '2296'
      Content-Type:
      - application/json
      Date:
      - Tue, 15 Oct 2024 01:22:47 GMT
      Server:
      - uvicorn
      Vary:
      - Origin
      Via:
      - kong/3.2.2
      X-Kong-Proxy-Latency:
      - '1'
      X-Kong-Upstream-Latency:
      - '4465'
      X-Ratelimit-Limit:
      - '4'
      X-Ratelimit-Remaining:
      - '3'
      X-Ratelimit-Reset:
      - '1728955369'
      X-User-Request-Id:
      - ''
    status:
      code: 200
      message: OK
version: 1
