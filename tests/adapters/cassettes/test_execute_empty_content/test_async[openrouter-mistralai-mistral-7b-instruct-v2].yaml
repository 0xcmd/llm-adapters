interactions:
- request:
    body: '{"messages": [{"role": "user", "content": ""}, {"role": "assistant", "content":
      " "}, {"role": "user", "content": "\n"}], "model": "mistralai/mistral-7b-instruct-v2"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '166'
      content-type:
      - application/json
      host:
      - openrouter.ai
      user-agent:
      - AsyncOpenAI/Python 1.50.1
      x-stainless-arch:
      - x64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.50.1
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.6
    method: POST
    uri: https://openrouter.ai/api/v1/chat/completions
  response:
    body:
      string: "\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n\n         \n\n         \n\n         \n\n
        \        \n\n         \n\n         \n{\"id\":\"gen-1728508451-zVSg6bF2f8ox6UNFacTR\",\"provider\":\"Lepton\",\"model\":\"mistralai/mistral-7b-instruct\",\"object\":\"chat.completion\",\"created\":1728508451,\"choices\":[{\"logprobs\":null,\"finish_reason\":\"length\",\"index\":0,\"message\":{\"role\":\"assistant\",\"content\":\"\u041E\u0431\u0440\u0430\u0431\u0430\u0442\u044B\u0432\u0430\u044E
        \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044E \u043E \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F\u0445
        \u0441 \u043F\u043E\u043C\u043E\u0449\u044C\u044E Pandas. \u041D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\u043E
        \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u0430\u0442\u044C \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0438\u0435
        \u043F\u043E\u043A\u0430\u0437\u0430\u0442\u0435\u043B\u0438 \u0434\u043B\u044F
        \u043A\u0430\u0436\u0434\u043E\u0433\u043E \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F:\\n\\n1.
        \u0421\u0440\u0435\u0434\u043D\u0435\u0435 \u0447\u0438\u0441\u043B\u043E
        \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0439 \u0437\u0430 \u0441\u0443\u0442\u043A\u0438.\\n2.
        \u0414\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u0441\u043A\u043E\u0439
        \u0441\u0435\u0441\u0441\u0438\u0438.\\n3. \u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E
        \u043F\u043E\u0441\u0435\u0449\u0435\u043D\u0438\u0439 \u0437\u0430 \u0441\u0443\u0442\u043A\u0438.\\n4.
        \u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u043D\u043E\u0432\u044B\u0445
        \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0439 \u0437\u0430 \u0441\u0443\u0442\u043A\u0438.\\n5.
        \u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u0440\u0435\u0434\u0430\u043A\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u043D\u044B\u0445
        \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0439 \u0437\u0430 \u0441\u0443\u0442\u043A\u0438.\\n\\n\u0414\u043B\u044F
        \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0438\u044F \u0437\u0430\u0434\u0430\u043D\u0438\u044F
        \u043D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\u043E \u0437\u043D\u0430\u0442\u044C,
        \u0447\u0442\u043E \u0438\u043C\u0435\u0435\u043C \u0434\u0430\u043D\u043D\u044B\u0435
        \u0432 \u0444\u043E\u0440\u043C\u0435 DataFrame, \u0433\u0434\u0435 \u043A\u043E\u043B\u043E\u043D\u043A\u0438:\\n-
        \\\"user\\\\_id\\\" - id \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F.\\n-
        \\\"timestamp\\\" - \u0432\u0440\u0435\u043C\u044F \u0432 \u043C\u0438\u043B\u043B\u0438\u0441\u0435\u043A\u0443\u043D\u0434\u0430\u0445.\\n-
        \\\"message\\\\_id\\\" - id \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u044F.\\n-
        \\\"message\\\\_text\\\" - \u0442\u0435\u043A\u0441\u0442 \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u044F.\\n-
        \\\"message\\\\_type\\\" - \u0442\u0438\u043F \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u044F
        (\\\"new\\\" \u0438\u043B\u0438 \\\"edit\\\").\\n\\n\u0414\u043B\u044F \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0438\u044F
        \u0437\u0430\u0434\u0430\u043D\u0438\u044F \u043C\u043E\u0436\u0435\u043C
        \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u044C \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0438\u0439
        \u043A\u043E\u0434:\\n```python\\nimport pandas as pd\\nimport numpy as np\\n\\n#
        \u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043C \u0434\u0430\u043D\u043D\u044B\u0435
        \u0432 DataFrame\\ndata = {\\n    'user_id': [1, 1, 1, 2, 2, 2, 3, 3, 3],\\n
        \   'timestamp': [123456789, 123456790, 123456800, 123456850, 123456851, 123456852,
        123456900, 123456901, 123456902],\\n    'message_id': [10, 11, 12, 20, 21,
        22, 30, 31, 32],\\n    'message_text': ['Hello', 'World', 'Is', 'Nice', 'Weather',
        'Today', 'Sunny', 'Day', 'Go'],\\n    'message_type': ['new', 'new', 'new',
        'new', 'new', 'edit', 'new', 'new', 'edit'],\\n}\\ndf = pd.DataFrame(data)\\n\\n#
        \u041F\u0435\u0440\u0435\u0444\u043E\u0440\u043C\u0430\u0442\u0438\u0440\u0443\u0435\u043C
        \u0432\u0440\u0435\u043C\u044F, \u0447\u0442\u043E\u0431\u044B \u043C\u043E\u0436\u043D\u043E
        \u0431\u044B\u043B\u043E \u0441\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C
        \u0441\u0442\u0440\u043E\u043A\u0438 \u043F\u043E \u0434\u043D\u044F\u043C\\ndf['date']
        = pd.to_datetime(df['timestamp'], unit='ms')\\n\\n# \u0413\u0440\u0443\u043F\u043F\u0438\u0440\u0443\u0435\u043C
        \u0434\u0430\u043D\u043D\u044B\u0435 \u043F\u043E \u0434\u043D\u044F\u043C
        \u0438 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F\u043C,
        \u0447\u0442\u043E\u0431\u044B \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u044B\u0432\u0430\u0442\u044C
        \u043F\u043E\u043A\u0430\u0437\u0430\u0442\u0435\u043B\u0438 \u0437\u0430
        \u0434\u0435\u043D\u044C\\ngrouped_df = df.groupby(['user_id', df['date'].dt.date])\\n\\n#
        \u0421\u0447\u0438\u0442\u0430\u0435\u043C \u0441\u0443\u043C\u043C\u0443
        \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0439
        \u0438 \u0441\u043F\u0438\u0441\u043E\u043A \u0438\u0445 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440\u043E\u0432
        \u0434\u043B\u044F \u043A\u0430\u0436\u0434\u043E\u0433\u043E \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F
        \u0437\u0430 \u043A\u0430\u0436\u0434\u044B\u0439 \u0434\u0435\u043D\u044C\\nmessages_count
        = grouped_df['message_id'].count().reset_index(name='messages_count')\\n\\n#
        \u0421\u0447\u0438\u0442\u0430\u0435\u043C \u0441\u0440\u0435\u0434\u043D\u0435\u0435
        \u0447\u0438\u0441\u043B\u043E \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0439
        \u0437\u0430 \u0441\u0443\u0442\u043A\u0438 \u0434\u043B\u044F \u043A\u0430\u0436\u0434\u043E\u0433\u043E
        \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F\\nmessages_count_per_day
        = messages_count.groupby(level=0)['messages_count'].mean()\\n\\n# \u0421\u0447\u0438\u0442\u0430\u0435\u043C
        \u043A\u043E\u043B-\u0432\u043E \u043D\u043E\u0432\u044B\u0445 \u0438 \u0440\u0435\u0434\u0430\u043A\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u043D\u044B\u0445
        \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0439 \u0434\u043B\u044F
        \u043A\u0430\u0436\u0434\u043E\u0433\u043E \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F
        \u0437\u0430 \u043A\u0430\u0436\u0434\u044B\u0439 \u0434\u0435\u043D\u044C\\nmessages_by_type
        = grouped_df['message_type'].value_counts(normalize=True).unstack(fill_value=0).reset_index()\\nmessages_by_type.columns
        = ['new', 'edit']\\n\\n# \u0421\u0447\u0438\u0442\u0430\u0435\u043C \u0441\u0443\u043C\u043C\u0443
        \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043F\u043E\u0441\u0435\u0449\u0435\u043D\u0438\u0439
        \u0437\u0430 \u0441\u0443\u0442\u043A\u0438 \u0434\u043B\u044F \u043A\u0430\u0436\u0434\u043E\u0433\u043E
        \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F\\nvisits_per_day
        = messages_count['message_id'].diff().fillna(0).abs()\\n\\n# \u0421\u0447\u0438\u0442\u0430\u0435\u043C
        \u0434\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u0441\u043A\u043E\u0439
        \u0441\u0435\u0441\u0441\u0438\u0438 \u0434\u043B\u044F \u043A\u0430\u0436\u0434\u043E\u0433\u043E
        \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F\\nsession_length
        = visits_per_day.diff().fillna(0).abs().groupby(level=0).sum()\\n\\n# \u0421\u0447\u0438\u0442\u0430\u0435\u043C
        \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u043D\u043E\u0432\u044B\u0445
        \u0438 \u0440\u0435\u0434\u0430\u043A\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u043D\u044B\u0445
        \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0439 \u0437\u0430 \u0441\u0443\u0442\u043A\u0438
        \u0434\u043B\u044F \u043A\u0430\u0436\u0434\u043E\u0433\u043E \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F\\nnew_messages_per_day
        = messages_by_type.loc\",\"refusal\":\"\"}}],\"usage\":{\"prompt_tokens\":9,\"completion_tokens\":1024,\"total_tokens\":1033}}"
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8d0160fd1d2f95a6-TBS
      Cache-Control:
      - public, max-age=0, must-revalidate
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Wed, 09 Oct 2024 21:14:11 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      access-control-allow-credentials:
      - 'true'
      access-control-allow-headers:
      - Authorization, User-Agent, X-Api-Key, X-CSRF-Token, X-Requested-With, Accept,
        Accept-Version, Content-Length, Content-MD5, Content-Type, Date, X-Api-Version,
        HTTP-Referer, X-Windowai-Title, X-Openrouter-Title, X-Title, X-Stainless-Lang,
        X-Stainless-Package-Version, X-Stainless-OS, X-Stainless-Arch, X-Stainless-Runtime,
        X-Stainless-Runtime-Version, X-Stainless-Retry-Count
      access-control-allow-methods:
      - GET,OPTIONS,PATCH,DELETE,POST,PUT
      access-control-allow-origin:
      - '*'
      content-length:
      - '7681'
      content-security-policy:
      - 'default-src ''self''; script-src ''self'' ''unsafe-eval'' ''unsafe-inline''
        https://clerk.openrouter.ai https://cunning-heron-18.clerk.accounts.dev https://challenges.cloudflare.com
        https://checkout.stripe.com https://connect-js.stripe.com https://js.stripe.com
        https://maps.googleapis.com https://www.googletagmanager.com https://*.ingest.sentry.io;
        connect-src ''self'' https://clerk.openrouter.ai https://cunning-heron-18.clerk.accounts.dev
        https://checkout.stripe.com https://api.stripe.com https://maps.googleapis.com
        *.google-analytics.com https://www.googletagmanager.com https://raw.githubusercontent.com
        https://*.ingest.sentry.io; frame-src ''self'' https://challenges.cloudflare.com
        https://checkout.stripe.com https://connect-js.stripe.com https://js.stripe.com
        https://hooks.stripe.com https://us5.datadoghq.com https://*.ingest.sentry.io;
        img-src ''self'' data: blob: https://img.clerk.com https://*.stripe.com https://www.googletagmanager.com
        https://t0.gstatic.com; worker-src ''self'' blob:; style-src ''self'' ''unsafe-inline''
        sha256-0hAheEzaMe6uXIKV4EehS9pu1am1lj/KnnzrOYqckXk=; upgrade-insecure-requests'
      strict-transport-security:
      - max-age=63072000
      x-matched-path:
      - /api/v1/chat/completions
      x-vercel-id:
      - arn1::p4ghr-1728508451451-d298a573a63c
    status:
      code: 200
      message: OK
version: 1
