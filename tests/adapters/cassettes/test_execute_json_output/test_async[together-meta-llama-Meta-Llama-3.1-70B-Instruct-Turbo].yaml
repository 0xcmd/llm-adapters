interactions:
- request:
    body: '{"messages": [{"role": "user", "content": "Hi, use json"}], "model": "meta-llama/Meta-Llama-3.1-70B-Instruct-Turbo",
      "response_format": {"type": "json_object"}, "stream": false}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, br
      connection:
      - keep-alive
      content-length:
      - '177'
      content-type:
      - application/json
      host:
      - api.together.xyz
      user-agent:
      - AsyncOpenAI/Python 1.53.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.53.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.10
    method: POST
    uri: https://api.together.xyz/chat/completions
  response:
    body:
      string: "{\n  \"id\": \"8daf4d986f4696bf-SJC\",\n  \"object\": \"chat.completion\",\n
        \ \"created\": 1730332179,\n  \"model\": \"meta-llama/Meta-Llama-3.1-70B-Instruct\",\n
        \ \"prompt_logprobs\": null,\n  \"prompt\": [],\n  \"choices\": [\n    {\n
        \     \"index\": 0,\n      \"message\": {\n        \"role\": \"assistant\",\n
        \       \"content\": \"**JSON (JavaScript Object Notation) Example**\\n====================================================\\n\\nJSON
        is a lightweight, easy-to-read data interchange format that is widely used
        for exchanging data between web servers, web applications, and mobile apps.\\n\\n**Basic
        JSON Structure**\\n-------------------------\\n\\nA JSON object consists of
        key-value pairs, where each key is a string and the value can be a string,
        number, boolean, array, or another object.\\n\\n```json\\n{\\n  \\\"name\\\":
        \\\"John Doe\\\",\\n  \\\"age\\\": 30,\\n  \\\"isEmployed\\\": true,\\n  \\\"address\\\":
        {\\n    \\\"street\\\": \\\"123 Main St\\\",\\n    \\\"city\\\": \\\"Anytown\\\",\\n
        \   \\\"state\\\": \\\"CA\\\",\\n    \\\"zip\\\": \\\"12345\\\"\\n  },\\n
        \ \\\"interests\\\": [\\\"reading\\\", \\\"hiking\\\", \\\"coding\\\"]\\n}\\n```\\n\\n**Parsing
        JSON in JavaScript**\\n------------------------------\\n\\nYou can parse a
        JSON string into a JavaScript object using the `JSON.parse()` method.\\n\\n```javascript\\nconst
        jsonString = '{\\\"name\\\":\\\"John Doe\\\",\\\"age\\\":30,\\\"isEmployed\\\":true,\\\"address\\\":{\\\"street\\\":\\\"123
        Main St\\\",\\\"city\\\":\\\"Anytown\\\",\\\"state\\\":\\\"CA\\\",\\\"zip\\\":\\\"12345\\\"},\\\"interests\\\":[\\\"reading\\\",\\\"hiking\\\",\\\"coding\\\"]}';\\n\\nconst
        jsonData = JSON.parse(jsonString);\\n\\nconsole.log(jsonData.name); // Output:
        John Doe\\nconsole.log(jsonData.address.city); // Output: Anytown\\nconsole.log(jsonData.interests[0]);
        // Output: reading\\n```\\n\\n**Generating JSON in JavaScript**\\n---------------------------------\\n\\nYou
        can generate a JSON string from a JavaScript object using the `JSON.stringify()`
        method.\\n\\n```javascript\\nconst data = {\\n  name: 'John Doe',\\n  age:
        30,\\n  isEmployed: true,\\n  address: {\\n    street: '123 Main St',\\n    city:
        'Anytown',\\n    state: 'CA',\\n    zip: '12345'\\n  },\\n  interests: ['reading',
        'hiking', 'coding']\\n};\\n\\nconst jsonString = JSON.stringify(data);\\n\\nconsole.log(jsonString);
        // Output: '{\\\"name\\\":\\\"John Doe\\\",\\\"age\\\":30,\\\"isEmployed\\\":true,\\\"address\\\":{\\\"street\\\":\\\"123
        Main St\\\",\\\"city\\\":\\\"Anytown\\\",\\\"state\\\":\\\"CA\\\",\\\"zip\\\":\\\"12345\\\"},\\\"interests\\\":[\\\"reading\\\",\\\"hiking\\\",\\\"coding\\\"]}'\\n```\\n\\n**Example
        Use Cases**\\n---------------------\\n\\n*   **Config files**: JSON can be
        used to store configuration data for applications, such as user preferences
        or API keys.\\n*   **Data exchange**: JSON can be used to exchange data between
        web servers, web applications, and mobile apps.\\n*   **NoSQL databases**:
        JSON can be used to store data in NoSQL databases, such as MongoDB or Couchbase.\\n\\nNote:
        This is a basic example of JSON and its usage. Depending on the programming
        language and use case, there may be additional features and considerations.\",\n
        \       \"tool_calls\": []\n      },\n      \"logprobs\": null,\n      \"finish_reason\":
        \"stop\"\n    }\n  ],\n  \"usage\": {\n    \"prompt_tokens\": 39,\n    \"total_tokens\":
        616,\n    \"completion_tokens\": 577\n  }\n}"
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8daf4d986f4696bf-SJC
      Connection:
      - keep-alive
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Wed, 30 Oct 2024 23:49:52 GMT
      Server:
      - cloudflare
      Strict-Transport-Security:
      - max-age=2592000; includeSubDomains
      Transfer-Encoding:
      - chunked
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400
      content-length:
      - '3100'
      etag:
      - W/"c1c-4PA9aNMydPrW/5AinGFnwYTMGbA"
      x-api-call-end:
      - '2024-10-30T23:49:52.757Z'
      x-api-call-start:
      - '2024-10-30T23:49:39.292Z'
      x-api-received:
      - '2024-10-30T23:49:39.286Z'
      x-inference-version:
      - v2
      x-ratelimit:
      - 'false'
      x-ratelimit-limit:
      - '100'
      x-ratelimit-limit-tokens:
      - '100000'
      x-ratelimit-remaining:
      - '198'
      x-ratelimit-remaining-tokens:
      - '99905'
      x-ratelimit-reset:
      - '1'
    status:
      code: 200
      message: OK
version: 1
