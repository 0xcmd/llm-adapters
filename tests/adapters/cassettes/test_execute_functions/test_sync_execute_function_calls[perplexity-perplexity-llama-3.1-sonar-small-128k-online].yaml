interactions:
- request:
    body: '{"messages": [{"role": "user", "content": "Generate random number"}], "model":
      "llama-3.1-sonar-small-128k-online", "function_call": {"name": "generate"},
      "functions": [{"description": "Generate random number", "name": "generate"}],
      "stream": false}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, br
      connection:
      - keep-alive
      content-length:
      - '249'
      content-type:
      - application/json
      host:
      - api.perplexity.ai
      user-agent:
      - OpenAI/Python 1.53.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.53.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.10
    method: POST
    uri: https://api.perplexity.ai/chat/completions
  response:
    body:
      string: '{"id": "68521391-d7dc-405b-92d2-1a7048f3d8e2", "model": "llama-3.1-sonar-small-128k-online",
        "created": 1730332162, "usage": {"prompt_tokens": 3, "completion_tokens":
        521, "total_tokens": 524}, "object": "chat.completion", "choices": [{"index":
        0, "finish_reason": "stop", "message": {"role": "assistant", "content": "To
        generate a random number, you can use various methods depending on the context
        and the desired range of the number. Here are a few approaches:\n\n### Using
        Microsoft Excel\n\n1. **Random Decimal between 0 and 1**:\n   - Use the `RAND`
        function. For example, in a cell, type `=RAND()` and press Enter. This will
        generate a random decimal between 0 and 1.\n\n2. **Random Whole Number between
        Two Specified Values**:\n   - Use the `RANDbetween` function. For example,
        to generate a random number between 5 and 5,000, type `=RANDbetween(5, 5000)`
        and press Enter.\n\n### Using JavaScript\n\n1. **Pseudo-Random Number between
        0 and 1**:\n   - Use the `Math.random()` function. For example:\n     ```javascript\n     const
        randomNumber = Math.random();\n     console.log(randomNumber);\n     ```\n     This
        will generate a pseudo-random number between 0 (inclusive) and 1 (exclusive).\n\n2.
        **Pseudo-Random Number between Two Specified Values**:\n   - Scale the result
        of `Math.random()` to your desired range. For example, to generate a random
        number between 1 and 10:\n     ```javascript\n     function getRandomArbitrary(min,
        max) {\n         return Math.random() * (max - min) + min;\n     }\n     const
        randomNumber = getRandomArbitrary(1, 10);\n     console.log(randomNumber);\n     ```\n   -
        To generate an integer, use `Math.floor()` to round down to the nearest integer:\n     ```javascript\n     function
        getRandomInt(min, max) {\n         const minCeiled = Math.ceil(min);\n         const
        maxFloored = Math.floor(max);\n         return Math.floor(Math.random() *
        (maxFloored - minCeiled) + minCeiled);\n     }\n     const randomNumber =
        getRandomInt(1, 10);\n     console.log(randomNumber);\n     ```\n\n### Using
        Online Tools\n\n1. **True Random Number Generator**:\n   - Use an online true
        random number generator like GIGACalculator.com. This tool generates truly
        random numbers using physical processes and can be used for various applications
        like lotteries and giveaways.\n\nEach method has its own advantages and use
        cases. For most programming scenarios, pseudo-random numbers generated by
        `Math.random()` or similar functions are sufficient. However, for applications
        requiring high security or true randomness, a true random number generator
        should be used."}, "delta": {"role": "assistant", "content": ""}}]}'
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8daf4d13aa8cf99f-SJC
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Wed, 30 Oct 2024 23:49:22 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=NzbRMeeWyHVbdwwN33hvLe_4FK1GjqFK5xIZmwPaEQA-1730332162-1.0.1.1-P7p7qSWadVmbct37QVgtLotUmXuNilyQObM4wF3He3XWaSrD0PqX991T_qB9Gxo_hBoghkwLeDVQAToyeGOfSg;
        path=/; expires=Thu, 31-Oct-24 00:19:22 GMT; domain=.perplexity.ai; HttpOnly;
        Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      content-length:
      - '2645'
    status:
      code: 200
      message: OK
version: 1
